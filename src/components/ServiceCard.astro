---
// Import the Icon component from astro-icon
import { Icon } from 'astro-icon/components';

/**
 * ServiceCard Component
 *
 * Displays a service with title, description, and icon.
 *
 * @param {string} title - The service title
 * @param {string} description - A brief description of the service
 * @param {string} icon - Icon name in format "collection:icon-name" (e.g., "lucide:pencil-ruler")
 * @param {string} iconColor - Color theme for the icon (primary or secondary)
 * @param {string} url - Optional URL for the service details page
 */
const {
  title,
  description,
  icon = 'lucide:star',
  iconColor = 'primary',
  url = '#',
} = Astro.props;

// Map of icon names to a simple visual representation
// In a real project, you might use an icon library
const iconMap = {
  palette: 'ðŸŽ¨',
  code: 'ðŸ’»',
  'chart-line': 'ðŸ“ˆ',
  default: 'âœ¨',
};

// Get the icon or use default
const iconDisplay = iconMap[icon] || iconMap.default;
---

<article class='service-card'>
  <div class='service-content'>
    <div class={`service-icon icon-${iconColor}`}>
      <!-- Use the Icon component from astro-icon -->
      <Icon name={icon} width='24' height='24' />
    </div>

    <h3 class='service-title'>
      {
        url ? (
          <a href={url} class='service-link'>
            {title}
          </a>
        ) : (
          title
        )
      }
    </h3>

    <p class='service-description'>{description}</p>

    {
      url && (
        <a href={url} class='service-read-more'>
          Read more
          <span class='sr-only'>about {title}</span>
          <span class='arrow-icon'>â†’</span>
        </a>
      )
    }
  </div>
</article>

<style>
  .service-card {
    display: flex;
    flex-direction: column;
    background-color: var(--color-background);
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
    height: 100%;
    transition:
      transform 0.2s,
      box-shadow 0.2s;
  }

  .service-card:hover {
    transform: translateY(-5px);
    box-shadow:
      0 10px 15px -3px rgba(0, 0, 0, 0.1),
      0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }

  .service-icon {
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    margin-bottom: 1.25rem;
    color: white;
  }

  .icon-primary {
    background-color: var(--color-primary);
  }

  .icon-secondary {
    background-color: var(--color-secondary);
  }

  .service-content {
    padding: 1.5rem;
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .service-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: var(--color-text);
  }

  .service-link {
    color: inherit;
    text-decoration: none;
  }

  .service-link:hover {
    color: var(--color-primary);
  }

  .service-description {
    color: var(--color-text-light);
    margin-bottom: 1.25rem;
    flex: 1;
  }

  .service-read-more {
    display: inline-flex;
    align-items: center;
    gap: 0.375rem;
    color: var(--color-primary);
    font-weight: 500;
    text-decoration: none;
    margin-top: auto;
    transition: color 0.2s;
  }

  .service-read-more:hover {
    color: var(--color-primary-dark);
  }

  .arrow-icon {
    transition: transform 0.2s;
  }

  .service-read-more:hover .arrow-icon {
    transform: translateX(3px);
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
</style>
